---
import { markdown } from '@astropub/md'
import { contentfulClient } from "../../lib/contentful";
import type { BlogPost } from "../../lib/contentful";
import Post from "../../layouts/BlogPost.astro";

export async function getStaticPaths() {
	const { items } = await contentfulClient.getEntries<BlogPost>({
		content_type: "markdownPage",
	});

	return items.map(item => ({
		params: { slug: item.fields.slug },
		props: {
			title: item.fields.title,
			content: item.fields.content,
			img: item.fields.heroImage,
			description: item.fields.description,
			id: item.sys.id,
		},
	}));
}

const { content, img, id, ...data } = Astro.props;

const heroImage = (await contentfulClient.getAsset(img.sys.id))?.fields?.file?.url;

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

// Tag the page with the slug - the webhook will update the page with this slug.
Astro.response.headers.set("netlify-cache-tag", `${id}`);
---

<Post heroImage={heroImage} {...data}>
	{
		await markdown(content)
	}
</Post>